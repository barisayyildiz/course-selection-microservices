services:
  course-db:
    container_name: course-db
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - pgdatacourse:/var/lib/postgresql/data
      - ./course-service/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - course_network

  course-service-app:
    container_name: course-service-app
    build: ./course-service
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - course-db
      - redpanda-0
      - course-service-redis
    networks:
      - course_network

  course-service-redis:
    container_name: course-service-redis
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
    - redisdatacourse:/data
    networks:
      - course_network

  professor-db:
    container_name: professor-db
    image: postgres:latest
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - pgdataprofessor:/var/lib/postgresql/data
      - ./professor-service/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - professor_network

  professor-service-app:
    container_name: professor-service-app
    build: ./professor-service
    restart: always
    ports:
      - "8001:8001"
      - "5005:5005"
    depends_on:
      - professor-db
      - redpanda-0
    networks:
      - professor_network
    environment:
      _JAVA_OPTIONS: "-Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"

  student-db:
    container_name: student-db
    image: postgres:latest
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - pgdatastudent:/var/lib/postgresql/data
      - ./student-service/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - student_network
  
  student-service-app:
    container_name: student-service-app
    build: ./student-service
    restart: always
    ports:
      - "8002:8002"
    depends_on:
      - student-db
      - redpanda-0
    networks:
      - student_network

  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://redpanda-0:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://redpanda-0:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.11
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    networks:
      - course_network
      - professor_network
      - student_network
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.4.5
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 30092:8080
    networks:
      - course_network
      - professor_network
      - student_network
    depends_on:
      - redpanda-0

# ======== LOG MONITORING

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.0
    volumes:
      - ./log-monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml
    restart: always

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    volumes:
      - ./log-monitoring/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    restart: always
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    depends_on:
      - elasticsearch

# ======== API Gateway
  gateway:
    container_name: course-selection-api-gateway
    build: ./apigateway
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - service-discovery
    networks:
      - course_network
      - professor_network
      - student_network
  
  service-discovery:
    container_name: course-selection-eureka-server
    build: ./eureka-server
    restart: always
    ports:
      - "8761:8761"
    depends_on:
      - course-service-app
      - professor-service-app
      - student-service-app
    networks:
      - course_network
      - professor_network
      - student_network

networks:
  course_network:
    driver: bridge
  professor_network:
    driver: bridge
  student_network:
    driver: bridge

volumes:
  redisdatacourse: null
  pgdatacourse: null
  pgdataprofessor: null
  pgdatastudent: null
  redpanda-0: null
  esdata: null

